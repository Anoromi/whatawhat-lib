#!/usr/bin/osascript -l JavaScript

// adapted from:
// https://gist.github.com/EvanLovely/cb01eafb0d61515c835ecd56f6ac199a

// new to jxa?
// - https://apple-dev.groups.io/g/jxa/wiki/3202
// - interactive repl: `osascript -il JavaScript`
// - API reference: Script Editor -> File -> Open Dictionary

// null.hello();
// console.log(Date.now())
ObjC.import("Foundation")

var seApp = Application("System Events")
function hmhm() {
  while (true) {
    // var oProcess = seApp.processes.whose({ frontmost: true })
    console.log(getApp())
    readOneLine()
  }
}

function readOneLine() {
  const stdin = $.NSFileHandle.fileHandleWithStandardInput
  const nl = 10 // '\n'
  const buffer = $.NSMutableData.data

  while (true) {
    const chunk = stdin.readDataOfLength(1)
    if (chunk.length === 0) break // EOF
    const byte = ObjC.unwrap(chunk).bytes()[0]
    buffer.appendData(chunk)
    if (byte === nl) break // stop at newline
  }

  if (buffer.length === 0) return ""

  const str = $.NSString.alloc
    .initWithDataEncoding(buffer, $.NSUTF8StringEncoding)
    .stringByTrimmingCharactersInSet($.NSCharacterSet.newlineCharacterSet)

  return ObjC.unwrap(str)
}

function getApp() {
  var oProcess = seApp.processes.whose({ frontmost: true })
  var appName = oProcess.displayedName()
  var unixId = oProcess.unixId()
  // as of 05/01/21 incognio & url are not actively used in AW
  // variables must be set to `undefined` since this script is re-run via osascript
  // and the previously set values will be cached otherwise
  var title = undefined

  // it's not possible to get the URL from firefox
  // https://stackoverflow.com/questions/17846948/does-firefox-offer-applescript-support-to-get-url-of-windows

  switch (appName) {
    case "Safari":
      title = Application(appName).documents[0].name()
      break
    case "Google Chrome":
    case "Google Chrome Canary":
    case "Chromium":
    case "Brave Browser":
      const activeWindow = Application(appName).windows[0]
      const activeTab = activeWindow.activeTab()

      title = activeTab.name()
      break
    case "Firefox":
    case "Firefox Developer Edition":
      title = Application(appName).windows[0].name()
      break
    default:
      mainWindow = oProcess
        .windows()
        .find((w) => w.attributes.byName("AXMain").value() === true)

      // in some cases, the primary window of an application may not be found
      // this occurs rarely and seems to be triggered by switching to a different application
      if (mainWindow) {
        title = mainWindow.attributes.byName("AXTitle").value()
      }
  }

  // key names must match expected names in lib.py
  return JSON.stringify({
    unixId,
    app: appName,
    title,
  })
}

hmhm()
